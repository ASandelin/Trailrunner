pipeline {
    agent any

    parameters {
        string(name: 'main', defaultValue: 'master', description: 'Main branch')
        string(name: 'b1', defaultValue: 'develop', description: 'Branch b1')
    }
    triggers {
        pollSCM('H * * * *') 
    }
    stages {
        stage('Build') {
            steps {
                dir('Trailrunner') {
                    bat 'mvn compile'
                }
            }
        }        
        stage('Test') {
            steps {
                dir('Trailrunner') {
                    bat 'mvn test'
                }
            }
        }
        stage('Run Robot') {
            steps {
                dir('Selenium') {
                    bat 'robot InfotivCarRental\\infotivCarRental.robot'
                }
            }
        }        
        stage('Post Test') {
            steps {
            	junit '**/target/surefire-reports/*.xml' // Collect JUnit test results
                jacoco(execPattern: '**/target/jacoco.exec') // Collect JaCoCo code coverage report
                archiveArtifacts(artifacts: 'selenium/log/output.xml, selenium/log/*.html, selenium/log/report*.html', allowEmptyArchive: true)
            }
        }

    }
}
