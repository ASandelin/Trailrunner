pipeline {
    agent any

    parameters {
        string(name: 'main', defaultValue: 'master', description: 'Main branch')
        string(name: 'b1', defaultValue: 'develop', description: 'Branch b1')
    }
    triggers {
        pollSCM('H * * * *') 
    }
    stages {
        stage('Build') {
            steps {
                dir('trailrunner') {
                    bat 'mvn compile'
                }
            }
        }        
        stage('Test') {
            steps {
                dir('trailrunner') {
                    bat 'mvn test'
                }
            }
        }
        stage('Post Test Trailrunner') {
            steps {
            	dir('trailrunner') {
            	   junit '**/target/surefire-reports/*.xml' // Collect JUnit test results
                	   jacoco(execPattern: '**/target/jacoco.exec') // Collect JaCoCo code coverage report
                	}
            }
        }    
        stage('Run Robot') {
            steps {
                dir('Selenium') {
                    bat 'robot InfotivCarRental\\infotivCarRental.robot'
                      script {
                        step([$class: 'RobotPublisher',
                              outputPath: 'log',
                              outputFileName: "output.xml",
                              reportFileName: "report.html",
                              logFileName: "log.html",
                              disableArchiveOutput: false,
                              passThreshold: 0.0,
                              unstableThreshold: 100.0,
                              otherFiles: "*.png"])                    
                      }

                }
            }
        }        
        stage('Post Test Robot') {
            steps { 
            	echo " Success?"
            }            
       }
   }
}
